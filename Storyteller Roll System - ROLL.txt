th u(newcobj,STORYTELLER: Roll Management System <ROLL>,ROLL,,u(cobj,story),,WIZARD SAFE !NO_COMMAND,INHERIT SIDEFX SAFE)

&CONFIG`OPTIONS [u(cobj,roll)]=TARGET_NUMBER|DOUBLE_NUMBER|AGAIN_NUMBER|REROLL_NUMBER|ONES_SUBTRACT|BOTCHES|CHANNEL

&CONFIG`TARGET_NUMBER [u(cobj,roll)]=Target number for d10s. This or above is a success.
&CONFIG`TARGET_NUMBER`DEFAULT [u(cobj,roll)]=8
&CONFIG`TARGET_NUMBER`VALID [u(cobj,roll)]=INT

&CONFIG`DOUBLE_NUMBER [u(cobj,roll)]=Double successes for D?s. This or above is two successes. Set to 11+ to disable.
&CONFIG`DOUBLE_NUMBER`DEFAULT [u(cobj,roll)]=11
&CONFIG`DOUBLE_NUMBER`VALID [u(cobj,roll)]=INT

&CONFIG`AGAIN_NUMBER [u(cobj,roll)]=Threshold for #-Again. SEt to 11+ to disable.
&CONFIG`AGAIN_NUMBER`DEFAULT [u(cobj,roll)]=10
&CONFIG`AGAIN_NUMBER`VALID [u(cobj,roll)]=INT

&CONFIG`REROLL_NUMBER [u(cobj,roll)]=Threshold for ReRoll-# until # or better stop appearing. SEt to 11+ to disable.
&CONFIG`REROLL_NUMBER`DEFAULT [u(cobj,roll)]=11
&CONFIG`REROLL_NUMBER`VALID [u(cobj,roll)]=INT

&CONFIG`ONES_SUBTRACT [u(Cobj,roll)]=Do dice that land on 1 subtract from successes? Mainly for Classic WoD.
&CONFIG`ONES_SUBTRACT`DEFAULT [u(cobj,roll)]=0
&CONFIG`ONES_SUBTRACT`VALID [u(Cobj,roll)]=BOOL

&CONFIG`BOTCHES [u(cobj,roll)]=Are Botches a thing? 0 = No. Chronicles depends on Chance die. 1 = Exalted. Botch if failure and at least one die shows 1. 2 = Classic WoD. Botch if number of successes is negative due to 1s.
&CONFIG`BOTCHES`DEFAULT [u(cobj,roll)]=0
&CONFIG`BOTCHES`VALID [u(cobj,roll)]=INT

&CONFIG`CHANNEL [u(cobj,roll)]=Channel to report dice rolls?
&CONFIG`CHANNEL`DEFAULT [u(cobj,roll)]=
&CONFIG`CHANNEL`VALID [u(cobj,roll)]=LIST

&CMD`+ROLL`PENNMUSH [u(cobj,roll)]=$^(?\:\+)?(st)?(d)?(?\:j(\d+))?(p)?roll(?\:/(\S+))?(?\: +(.+?))?(?\:=(.*))?$:@attach %!/CMD`+ROLL`MAIN
@set [u(cobj,roll)]/CMD`+ROLL`PENNMUSH=regexp
&CMD`+ROLL`RHOSTMUSH [u(cobj,roll)]=$^(?\:\+)?(st)?(d)?(?\:j(\\d+))?(p)?roll(?\:/(\\S+))?(?\: +(.+?))?(?\:=(.*))?$:@attach %!/CMD`+ROLL`MAIN
@set [u(cobj,roll)]/CMD`+ROLL`RHOSTMUSH=regexp
&CMD`+ROLL`MAIN [u(cobj,roll)]=th u(setq,private,t(%4));@select/inline ucstr(%1)=ST,{@check u(isadmin,%#)=@attach %!/INC`MSG=ERROR: Permission denied.};@select/inline cand(u(isadmin,%#),strlen(%1))=1,{@attach %!/INC`CHECKPC=%6,1;th u(setq,rollstring,%7)},0,{@attach %!/INC`CHECKPC=%#,1;th u(setq,rollstring,%6)};@attach %!/INC`LOADSQL=PERSONA,get(%q<t1>/D`PERSONA),1;@select/inline t(%3)=1,{@attach %!/INC`JOBINIT};@check strlen(%q<rollstring>)=@attach %!/INC`MSG=ERROR: Must enter something to roll! Example: Dexterity + 3;@check u(setr,rollres,u(ROLL,%q<persona1.id>,%q<rollstring>,iter(setunion(%5,if(%2,dbl:11),/,/),%i0,/,|)))=@attach %!/INC`MSG=ERROR: %q<rollres>;@attach %!/INC`ROLL
@set [u(cobj,roll)]/CMD`+ROLL`[u(choosegame,RHOSTMUSH,PENNMUSH)]=no_command

&SYSTEM`NAME [u(cobj,roll)]=DICE

&ROLL`PARAM [u(cobj,roll)]=u(lmin,iter(ucstr(%0),regeditalli(%i0,^\(?P<switch>\\w+?\)\\:\(?P<num>\\d+\)?$,if(hasattr(%!/ROLL`PARAM`$<switch>),u(ROLL`PARAM`$<switch>,$<num>),u(ROLL`ERROR,Unrecognized parameter: %i0)0)),|))

&ROLL`PARAM`MUL [u(cobj,roll)]=if(u(valnum,%0),u(setq,mul,%0)1,u(ROLL`ERROR,Multi-Rolls must use whole positive numbers.)0)
&ROLL`PARAM`TN [u(cobj,roll)]=if(u(valnum,%0),u(setq,tn,%0)1,u(ROLL`ERROR,Target Numbers must use whole positive numbers.)0)
&ROLL`PARAM`DIF [u(cobj,roll)]=if(u(valnum,%0),if(not(%q<def>),u(setq,dif,%0)1,u(ROLL`ERROR,Difficulty and Defense cannot be used together.)),u(ROLL`ERROR,Difficulty must use whole positive numbers.)0)
&ROLL`PARAM`SUX [u(cobj,roll)]=if(u(valnum,%0),u(setq,sux,%0)1,u(ROLL`ERROR,Successes must use whole positive numbers.)0)
&ROLL`PARAM`PEN [u(cobj,roll)]=if(u(valnum,%0),u(setq,pen,%0)1,u(ROLL`ERROR,Penalties must use whole positive numbers.)0)
&ROLL`PARAM`AG [u(cobj,roll)]=if(u(valnum,%0),u(setq,ag,%0)1,u(ROLL`ERROR,#-Again must use whole positive numbers.)0)
&ROLL`PARAM`DEF [u(cobj,roll)]=if(u(valnum,%0),if(not(%q<dif>),u(setq,def,%0)1,u(ROLL`ERROR,Difficulty and Defense cannot be used together.)),u(ROLL`ERROR,Defense Values must use whole positive numbers.)0)
&ROLL`PARAM`RE [u(cobj,roll)]=if(u(valnum,%0),u(setq,re,setunion(%0,%q<re>))1,u(ROLL`ERROR,Re-Roll # must use whole positive numbers.)0)
&ROLL`PARAM`DBL [u(cobj,roll)]=if(u(valnum,%0),u(setq,dbl,%0)1,u(ROLL`ERROR,Double-# must use whole positive numbers.)0)
&ROLL`PARAM`PRIVATE [u(cobj,roll)]=u(setq,private,1)1
&ROLL`PARAM`PUBLIC [u(cobj,roll)]=u(setq,public,1)1
&ROLL`PARAM`JOB [u(cobj,roll)]=if(u(valnum,%0),u(setq,jid,%0)1,u(ROLL`ERROR,Job IDs must be positive integers.)0)

&ROLL`ERROR [u(cobj,roll)]=u(setq,errcheck,setunion(%q<errcheck>,%0,|,|))

&ROLL`READYSTATS [u(cobj,roll)]=localize(strcat(u(mysql3,SELECT`ROLLSTATS,u(SQL`IN`NUMBER,edit(u(lattr,%!/ROLL_PARENT`*),ROLL_PARENT`,)),%0),switch(if(strlen(v(SELECT`POWERSTAT)),strlen(elements(u(setr,powerstat,u(mysql3,SELECT`POWERSTAT,%0)),2,chr(177)))),>0,chr(176)[elements(%q<powerstat>,2 3,chr(177),chr(177))])))

&Q`SELECT`ROLLSTATS [u(cobj,roll)]=SELECT display_roll_name,stat_value FROM volv_story_persona_stats WHERE stat_parent IN (!) AND stat_value>0 AND persona_id=? ORDER BY display_roll_name
&Q`SELECT`POWERSTAT [u(cobj,roll)]=SELECT template_id,template_power_stat_name,power_stat_value FROM volv_story_personas WHERE persona_id=?

&ROLL`INIT [u(cobj,roll)]=null([if(%q<tn>,,u(setq,tn,u(conf,TARGET_NUMBER)))][if(%q<mul>,,u(setq,mul,1))][if(%q<ag>,,u(setq,ag,u(conf,AGAIN_NUMBER)))][if(%q<re>,,u(setq,re,u(conf,REROLL_NUMBER)))][if(cor(%q<dbl>,%q<nodbl>),,u(setq,dbl,u(conf,DOUBLE_NUMBER)))][u(setq,dicemap,u(ROLL`DICEMAP,%q<tn>,%q<dbl>,u(conf,BOTCHES)))])

&ROLL`DICEMAP [u(cobj,roll)]=iter(0.001 [iter(lnum(sub(%0,2)),0)] [iter(lnum(sub(11,%0)),1)],if(cand(%1,gte(inum(0),%1)),2,%i0))

&ROLL`NORMALIZE [u(cobj,roll)]=squish(regeditall(%0,v(REG`NORMALIZE),%b$<sym>%b))
&REG`NORMALIZE [u(cobj,roll)]=(\s*)?(?P<sym>[\+|\-])(\s*)?

&ROLL`FINDNAMES [u(cobj,roll)]=regeditalli(%0,v(REG`FORMATROLL),localize(if(isnum($0),floor($0),switch(u(setr,statcheck,$0),*_*,u(ROLL`FINDSPECNAME,u(ROLL`FINDSTATNAME,before(%q<statcheck>,_),%1)_[after(%q<statcheck>,_)],%1),u(ROLL`FINDSTATNAME,%q<statcheck>,%1)))))
&REG`FORMATROLL [u(cobj,roll)]=(\b\S+(?:\b\s\S+)*\b\)?)
&ROLL`FINDSTATNAME [u(cobj,roll)]=before(grab(u(filter,NOTSPEC,%1,chr(176),chr(176)),%0*,chr(176)),chr(177))
&FIL`NOTSPEC [u(cobj,roll)]=not(strmatch(%0,*_*))
&ROLL`FINDSPECNAME [u(cobj,roll)]=before(grab(%1,[before(%0,_)]*_[after(%0,_)]*,chr(176)),chr(177))

&ROLL`CALCDICE [u(cobj,roll)]=regeditalli(%0,v(REG`FORMATROLL),if(isnum($0),floor($0),u(ROLL`STATNUM,$0,%1)))
&ROLL`STATNUM [u(cobj,roll)]=after(grab(%1,%0*,chr(176)),chr(177))

&ROLL`CALC [u(cobj,roll)]=u(ladd,regeditalli(%0,(\[-+\])%B(\\d+),$1$2))

&ROLL`MAPDICE [u(cobj,roll)]=lmath(add,elements(%1,%0))

&ROLL`REROLLS [u(cobj,roll)]=localize(if(u(setr,redice,words(u(filter,DICEMATCH,u(setr,sortdice,sort(die(%0,10,1))),%b,%b,%q<re>))),u(ROLL`REROLLS,%q<redice>,1,if(%1,%2|%q<sortdice>,%q<sortdice>)),if(strlen(%2),%2[if(strlen(%q<sortdice>),|%q<sortdice>)],%q<sortdice>)))

&ROLL`DOROLL [u(cobj,roll)]=localize(if(u(setr,againdice,words(u(filter,DICEGREAT,edit(u(setr,rerolls,u(ROLL`REROLLS,%0)),|,%b),%b,%b,%q<ag>))),u(ROLL`DOROLL,%q<againdice>,1,if(%1,%2%R%q<rerolls>,%q<rerolls>)),if(strlen(%2),%2[if(strlen(%q<rerolls>),%R%q<rerolls>)],%q<rerolls>)))
&FIL`DICEMATCH [u(cobj,roll)]=t(match(%1,%0))
&FIL`DICEGREAT [u(cobj,roll)]=gte(%0,%1)

&ROLL`FORMATROLL [u(cobj,roll)]=regeditalli(%0,v(REG`FORMATROLL),u(ROLL`FORMATNUM,$0,%1),%b\\+%b,ansi(hg,%b+%b),%b\\-%b,ansi(hr,%b-%b))

&ROLL`FORMATNUM [u(cobj,roll)]=if(isint(%0),ansi(hw,%0),localize([u(setq,found,grab(%1,%0*,chr(176)))][if(strlen(%q<found>),ansi(hw,before(%q<found>,chr(177))<[after(%q<found>,chr(177))]>),ansi(hx,%0<0>))]))

&ROLL`FANCYDICE [u(cobj,roll)]=iter(%0,ansi(switchall(1,eq(u(setr,res,elements(%q<dicemap>,%i0)),0.001),hx,eq(%q<res>,0),hr,eq(%q<res>,1),hg,eq(%q<res>,2),hy,gte(%i0,%q<ag>),u,t(match(%q<re>,%i0)),C),switch(%q<res>,2,<%i0>,0.001,-%i0-,%i0)))

&ROLL [u(cobj,roll)]=if(if(strlen(%2),not(u(ROLL`PARAM,%2)),0),#-1 %q<errcheck>,[u(ROLL`INIT)][if(not(strlen(u(setr,normalize,u(ROLL`NORMALIZE,%1)))),#-1 NOTHING ENTERED OR IMPROPERLY FORMATTED,if(not(words(u(setr,allstats,u(ROLL`READYSTATS,%0)),chr(176))),#-1 NO STATS TO ROLL. CHECK PERSONA.,if(not(strlen(u(setr,findnames,u(ROLL`FINDNAMES,%q<normalize>,%q<allstats>)))),#-1 COULD NOT NORMALIZE. CHECK DICE ROLL STRING.,if(not(u(setr,calc,u(ROLL`CALC,u(setr,calcdice,u(ROLL`CALCDICE,%q<findnames>,%q<allstats>))))),#-1 NO DICE TO ROLL. CHECK STATS CHOSEN.,[null(u(setr,finalsuxx,add(u(setr,suxx,add(0,before(u(setr,mapresults,u(ROLL`MAPDICE,edit(edit(u(setr,rollresults,u(ROLL`DOROLL,%q<calc>)),%R,%b),|,%b),%q<dicemap>)),.))),%q<sux>,mul(-1,%q<pen>)))[u(setq,ones,if(strlen(after(%q<mapresults>,.)),mul(after(%q<mapresults>,.),1000),0))][if(u(conf,ONES_SUBTRACT),u(setq,finalsuxx,sub(%q<suxx>,%q<ones>)))][if(cor(%q<def>,%q<dif>),u(setq,finalsuxx,sub(%q<finalsuxx>,max(%q<def>,%q<div>))))][u(setq,status,if(eq(-1,switch(u(conf,BOTCHES),0,0,1,if(and(gt(%q<finalsuxx>,0),lt(%q<finalsuxx>,1)),-1,0),2,if(lt(%q<suxx>,0),-1,0),0)),-1,if(%q<def>,gte(%q<finalsuxx>,1),t(%q<finalsuxx>))))][u(setq,fancyresults,iter(%q<rollresults>,iter(%i0,u(ROLL`FANCYDICE,%i0),|,|),%R,%R))][u(setq,fancystats,u(ROLL`FORMATROLL,%q<findnames>,%q<allstats>))])]%q<finalsuxx>|%q<status>|%q<fancystats>|MUL:%q<mul>^TN:%q<tn>^DIF:%q<dif>^SUX:%q<sux>^PEN:%q<pen>^AG:%q<ag>^DEF:%q<def>^RE:%q<re>^DBL:%q<dbl>|%q<calc>%R%q<fancyresults>))))])
@@ This should PROBABLY be called via localize() or ulocal().
@@ %0 - Persona ID. %1 - Dice roll string. Dexterity + Firearms etc. %2 - Parameters in format of PARAM1:Arg|PARAM2:Arg...
@@ OUTPUT FORMAT:<# of successes>|<status: -1 for botch, 0 for fail, 1 for success>|<fancy stat print>|<params>|<totaldice>%R<rolls>%R...

&FUN`ROLLRESULT [u(cobj,roll)]=if(and(not(isint(%0)),lt(%0,1)),ansi(hx,a botch!),switch(%1,0,if(lt(floor(%0),1),ansi(hr,a failure!),if(gt(floor(%0),1),ansi(hg,floor(%0) successes!),ansi(hg,a success!))),1,if(lte(floor(%0),%2),if(floor(%0),floor(%0) success[if(gt(floor(%0),1),es)]\, but [ansi(hr,a miss.)],no successes! [ansi(hr,a miss!)]),ansi(hg,floor(%0) success[if(gt(floor(%0),1),es)]! [sub(floor(%0),%2)] success[if(gt(sub(floor(%0),%2),1),es)] over DV!)),2,if(lt(floor(%0),%2),if(floor(%0),floor(%0) successes\, but [ansi(hr,a failure.)],no successes! [ansi(hr,a failure!)]),ansi(hg,floor(%0) Success[if(gt(floor(%0),1),es)]!%B[sub(floor(%0),%2)] Threshold Success[if(gt(sub(floor(%0),%2),1),es)]))))

&FUN`RESFORMAT [u(cobj,roll)]=localize([if(strmatch(%#,%2),if(%1,You Roll,%n rolls),if(%1,You roll for [name(%2)],%n rolls with [name(%2)]'s Stats))]%b[elements(%0,3,|)][null(iter(elements(%0,%0,4,|),u(setq,before(%i0,:),after(%i0,:)),^))][if(neq(%q<tn>,u(conf,TARGET_NUMBER)),%bat TN%q<tn>)][if(%q<def>,\,%bVs DV%q<def>)][if(%q<dif>,\,%bat Difficulty %q<dif>)][if(neq(words(setinter(%q<dbl>,u(conf,DOUBLE_NUMBER))),words(%q<dbl>)),\,%bWith Double [itemize(sort(%q<dbl>),%b,and,\,)])][if(neq(%q<ag>,u(conf,AGAIN_NUMBER)),\,%bWith %q<ag>-Again)][if(lt(u(lmin,%q<re>),11),\,%bRe-Rolling [itemize(%q<re>,%b,and,\,)])]: [elements(before(%0,%R),5,|)] Total dice!%R[iter(after(%0,%R),ansi(h,if(gt(inum(0),1),u(numth,sub(inum(0),1)) %q<ag>-Again Roll,Main Roll):)%b[elements(%i0,1,|)][if(strlen(u(setq,rerolls,after(%i0,|))),%BRe-Rolls: %q<rerolls>)],%r,%r)]%R%TResulting in: [u(FUN`ROLLRESULT,elements(%0,1,|),if(%q<def>,1,if(%q<dif>,2,0)),u(strfirstof,%q<def>,%q<dif>))][if(%q<sux>,%R%TBonus Successes: %q<sux>)][if(%q<pen>,%R%TPenalty: %q<pen>)])
@@ %0 - Input roll %1 - privacy bool %2 - stat source dbref

&INC`ROLL [u(cobj,roll)]=th u(setq,results,u(FUN`RESFORMAT,%q<rollres>,%q<private>,%#));@select/inline t(%q<private>)=1,{@attach %!/INC`MSG=%q<results>},0,{@attach %!/INC`MSG`ROOM=%q<results>};@attach %!/INC`MSG`CHAN=if(%q<private>,\(PRIVATE\)%B)[if(%q<private>,edit(%q<results>,You Roll,%n Rolls),%q<results>)],u(conf,CHANNEL);@select/inline %q<jid>=>0,{@trigger u(cobj,jms)/INC`JOBROLL=,%q<results>}

&CMD`+ROLLINIT [u(cobj,roll)]=$roll init:@check words(u(setr,list,lvplayers(%l)))=@attach %!/INC`MSG=Nobody to roll init for!;th iter(%q<list>,u(setq,dex,u(firstof,u(getstat,%i0,D`ATTRIBUTES,DEXTERITY,BONUS),0),comp,u(firstof,u(getstat,%i0,D`ATTRIBUTES,COMPOSURE,BONUS),0),bonus,u(firstof,u(getstat,%i0,D`BONUS,initiative),0),roll,u(firstof,rand(1,10),0))[u(attrib_set,%i0,INITROLL,ansi(h,DEXTERITY\(%q<dex>\) + COMPOSURE\(%q<comp>\) + BONUS\(%q<bonus>\) + ROLL\(%q<roll>\) = )%B[ansi(hg,add(%q<dex>,%q<comp>,%q<bonus>,%q<roll>))])]);@attach %!/INC`MSG`ROOM=%n called for an Initiative Roll!;th iter(sortkey(#lambda/stripansi(last(get(\%0/INITROLL))),%q<list>,n),remit(%l,ljust(left(name(%i0):,add(1,config(player_name_len))),add(1,config(player_name_len)))%B[get(%i0/INITROLL)]))


@@ Job add-on
&INC`JOBINIT [u(cobj,roll)]=@attach %!/INC`PLAYERID=%:;@check u(u(cobj,jms)/mysql,GET`JOBID,%q<jid>)=@attach %!/INC`MSG=ERROR: Job %0 not found.;@check or(strmatch(u(u(cobj,jms)/mysql,GET`OWNEROBJID,%q<jid>),%:),match(u(u(cobj,jms)/mysql,GET`ANYOBJIDS,%q<jid>),%:),match(u(u(cobj,jms)/mysql,GET`CLAIMOBJIDS,%q<jid>),%:),u(FUN`PERMCHECK,u(setr,cat,u(u(cobj,jms)/mysql,GET`JOBCAT,%q<jid>)),ADMIN,%#))=@attach %!/INC`MSG=ERROR: Permission Denied.;@check eq(u(u(cobj,jms)/mysql,GET`JOBSTATUS,%q<jid>),0)=@attach %!/INC`MSG=The job is already finished.

&INC`JOBROLL [u(cobj,job)]=@attach %!/INC`DOSQL=ADD`COMMENT,%q<jid>,%q<pid>,0,%1;@attach %!/INC`MSGJOB=%q<jid>,{[u(FUN`MASKNAME,%q<cat>)] sent a DICE ROLL in for [u(FUN`JOBNAME,%q<jid>,%q<cat>)].};@attach %!/INC`MAILJOB=%q<jid>,{[u(FUN`MASKNAME,%q<cat>)] sent a DICE ROLL in for [u(FUN`JOBNAME,%q<jid>,%q<cat>)].%R%RMessage:%R%1};@attach %!/INC`UPDJOB=0,%q<jid>;@attach %!/INC`DOSQL=SET`JOBATTN,not(strmatch(u(mysql,GET`OWNEROBJID,%q<jid>),%:)),%q<jid>;@attach %!/INC`DOSQL=SET`CHECKDATE,%q<jid>,%q<pid>

@@ ROLEPLAYING - +ROLL
&HLP`ROLL [u(cobj,roll)]=[ansi(h,+roll\[/switches\] <stats to roll>)]%R[ansi(h,+droll\[/switches\] <stats to roll>)]%R%R+roll is for virtually any situation that involves rolling X amount of d10.%R%R<stats to roll> can be any Attribute, Ability, or Stat+Specialty (addressed by attribute or ability followed by a slash and then the text-- example, Melee/Swords. This will ADD BOTH TOGETHER so you don't need to use Melee + Melee/Swords), Willpower, Essence, Crafts, or martial arts styles. It will also accept any whole numbers. Each entry can be seperated by a + or -.%R%RExample of a valid roll formula: +roll Dexterity + Melee + 10%R%RStat entries are not case sensitive, although they do support partial matches. Dex will be matched to Dexterity... however, int could be either Intelligence or Integrity, and it will pick the first its matching algorithm finds, so be careful to enter enough to not be vague.%R%R+droll is the same as +roll, though it does not count 10s as succeses. This is used for rolling extras or damage and so on.%R%RSWITCHES (which can be combined in any order and used repeatedly) are-%R%R/def# - Roll against a given Defense to determine hit or miss and threshold successes. (may not be used with /dif# simultaneously)%R/dif# - Roll against a given difficulty to determine threshold succeses. (may not be used with /def# simultaneously)%R/tn# - change target number.%R/sux# - adds automatic successes.%R/pen# - external penalties to subtract successes from rolls.%R/PRIVATE - only you see the roll's results.%R/mul# - multi-roll. Rolls the given <stats to roll> # amount of times. Note: does not support cumulative penalties for flurries.%R/dbl# - double #. This or above counts as two successes.%R/re# - Re-roll #. Can be used several times, such as /re6/re7/re8.%R/job# - Post results to a job you have access to.
+help/add Roleplaying/+roll=[u(cobj,roll)]/HLP`+ROLL


&SHLP`ROLL [u(cobj,roll)]=In addition to the normal commands, Storytellers may do the following:%R+stroll\[/<switches>\] <player>=<roll string>%R%RIt does exactly what it sounds like.%RTo Configure the dice system, use +roll/config
+shelp/add Roleplaying/+roll=[u(cobj,roll)]/SHLP`ROLL
